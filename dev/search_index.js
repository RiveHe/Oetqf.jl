var documenterSearchIndex = {"docs":
[{"location":"APIs/#Public-Interface","page":"APIs","title":"Public Interface","text":"","category":"section"},{"location":"APIs/","page":"APIs","title":"APIs","text":"Modules = [Oetqf]\nPages = []\nPrivate = false\nOrder = [:type, :function, :constant, :macro]","category":"page"},{"location":"APIs/#Oetqf.wsolve-Tuple{ODEProblem, OrdinaryDiffEqAlgorithm, Any, Any, Any, Any, Any}","page":"APIs","title":"Oetqf.wsolve","text":"wsolve(prob::ODEProblem, alg::OrdinaryDiffEqAlgorithm,\n    file, nstep, getu, ustrs, tstr; kwargs...)\n\nWrite the solution to HDF5 file while solving the ODE. The interface     is exactly the same as     solve an ODEProblem     except a few more about the saving procedure. Notice, it will set     save_everystep=false so to avoid memory blow up. The return code     will be written as an attribute in tstr data group.\n\nExtra Arguments\n\nfile::AbstractString: name of file to be saved\nnstep::Integer: number of steps after which a saving operation will be performed\ngetu::Function: function handler to extract desired solution for saving\nustr::AbstractVector: list of names to be assigned for each components, whose   length must equal the length of getu output\ntstr::AbstractString: name of time data\n\nKWARGS\n\nstride::Integer=1: downsampling rate for saving outputs\nappend::Bool=false: if true then append solution after the end of file\nforce::Bool=false: force to overwrite the existing solution file\n\n\n\n\n\n","category":"method"},{"location":"#Introduction","page":"Home","title":"Introduction","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"This package is used to simulate the quasi-dynamic earthquake cycles under the framework of rate-and-state friction on a transfinite-mesh transform fault overlaying a viscoelastic hexahedron-mesh mantle using boundary-element-method (BEM). This package is an updated subset version of Quaycle.jl which includes dipping fault, triangular-mesh (fault) and tetrahedron-mesh (mantle).","category":"page"},{"location":"","page":"Home","title":"Home","text":"A collection of commonly used Green's function can be accessed at GeoGreensFunctions.jl. The package uses Gmsh for domain discreitzation. See GmshTools.jl also for a more convenient way to use Gmsh in Julia.","category":"page"},{"location":"#Known-Issues","page":"Home","title":"Known Issues","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"The competetion between Julia threads and BLAS threads when hyperthreading is disabled, see this example.","category":"page"}]
}
